<launch>
  <!-- ========================= CLI Arguments ========================= -->
  <!-- Check if testing on route 1 or 2 -->
  <arg name="route" default="route1" />

  <!-- Robot initial pose -->
  <!-- If Route 1 -->
  <arg name="x" default="6.479509" if="$(eval route=='route1')" />
  <arg name="y" default="-2.143890" if="$(eval route=='route1')" />
  <arg name="z" default="0.524258" if="$(eval route=='route1')" />
  <arg name="yaw" default="-3.104072" if="$(eval route=='route1')" />
  <!-- Route 1 Goal Location -->
  <arg name="goal_x" default="-4.943511" if="$(eval route=='route1')" />
  <arg name="goal_y" default="-5.622047" if="$(eval route=='route1')" />
  <arg name="goal_z" default="0.373011" if="$(eval route=='route1')" />
  <!-- Route 1 GPS Goal Location -->
  <arg name="latitude" default="49.89995513748075" if="$(eval route=='route1')" />
  <arg name="longitude" default="8.90007896815947" if="$(eval route=='route1')" />
  <!-- Route 1 GPS Start Location -->
  <arg name="start_latitude" default="49.90005764149405" if="$(eval route=='route1')" />
  <arg name="start_longitude" default="8.900029500459075" if="$(eval route=='route1')" />


  <!-- If Route 2 -->
  <arg name="x" value="-4.855142" if="$(eval route=='route2')" />
  <arg name="y" value="-5.704758" if="$(eval route=='route2')" />
  <arg name="z" value="0.538968" if="$(eval route=='route2')" />
  <arg name="yaw" value="0" if="$(eval route=='route2')" />
  <!-- Route 2 Goal Location -->
  <arg name="goal_x" default="6.479509" if="$(eval route=='route2')" />
  <arg name="goal_y" default="-2.120167" if="$(eval route=='route2')" />
  <arg name="goal_z" default="0.373011" if="$(eval route=='route2')" />
  <!-- Route 2 GPS Goal Location -->
  <arg name="latitude" default="49.90005868661742" if="$(eval route=='route2')" />
  <arg name="longitude" default="8.900029824851464" if="$(eval route=='route2')" />
  <!-- Route 2 GPS Start Location -->
  <arg name="start_latitude" default="49.89995669997637" if="$(eval route=='route2')" />
  <arg name="start_longitude" default="8.900080135270718" if="$(eval route=='route2')" />


  <!-- If Route 3 -->
  <arg name="x" value="6.422005" if="$(eval route=='route3')" />
  <arg name="y" value="-5.174587" if="$(eval route=='route3')" />
  <arg name="z" value="0.516969" if="$(eval route=='route3')" />
  <arg name="yaw" value="-3.112761" if="$(eval route=='route3')" />
  <!-- Route 3 Goal Location -->
  <arg name="goal_x" default="-4.943510" if="$(eval route=='route3')" />
  <arg name="goal_y" default="-2.638408" if="$(eval route=='route3')" />
  <arg name="goal_z" default="0.373011" if="$(eval route=='route3')" />
  <!-- Route 3 GPS Goal Location -->
  <arg name="latitude" default="49.89995491965573" if="$(eval route=='route3')" />
  <arg name="longitude" default="8.900036272980314" if="$(eval route=='route3')" />
  <!-- Route 3 GPS Start Location -->
  <arg name="start_latitude" default="49.900058712424624" if="$(eval route=='route3')" />
  <arg name="start_longitude" default="8.900071621874774" if="$(eval route=='route3')" />


  <!-- Gazebo World file to load -->
  <arg name="world_name" default="$(find parc_robot)/worlds/parc_task1.world" />

  <!-- ========================= Robot Model ========================= -->
  <!-- Load URDF -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find parc_robot)/urdf/robot.xacro'" />

  <!-- Generate TF from URDF -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <!-- ========================= Simulator ========================= -->
  <!-- Start Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(arg world_name)" />
      <arg name="paused" value="false" />
      <arg name="use_sim_time" value="true" />
      <arg name="gui" value="true" />
      <arg name="headless" value="false" />
      <arg name="debug" value="false" />
  </include>

  <rosparam command="load" file="$(find parc_robot)/config/control.yaml"/>

  <!-- Spawn Robot model in Gazebo -->   
  <node name="spawn_robot_model" pkg="gazebo_ros" type="spawn_model" args="-x $(arg x)
                -y $(arg y)
                -z $(arg z)
                -Y $(arg yaw)
                -unpause
                -urdf
                -param robot_description
                -model 'robot'" />

  <!-- Show Goal Location in Gazebo -->
  <node name="spawn_goal_location" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-file $(find parc_robot)/models/goal_location/model.sdf -sdf 
                -model goal_location
                -x $(arg goal_x)
                -y $(arg goal_y)
                -z $(arg goal_z)" />

  <!-- GPS Coordinate of Goal Location -->
  <param name="goal_latitude" type="double" value="$(arg latitude)" />
  <param name="goal_longitude" type="double" value="$(arg longitude)" />
  <param name="start_latitude" type="double" value="$(arg start_latitude)" />
  <param name="start_longitude" type="double" value="$(arg start_longitude)" />

  <!-- GPS Coordinate of Pegs -->
  <rosparam file="$(find parc_robot)/config/peg_coordinates.yaml" command="load" />

  <!-- ========================= Vizualize ========================= -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find parc_robot)/rviz/task1.rviz" />
</launch>